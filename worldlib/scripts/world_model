#!/usr/bin/env python

'''
The world_model node exposes the worldlib API over ROS topics and services.

@author:  Russell Toris
@version: January 16, 2013
'''

import rospy
from worldlib import native
from worldlib.srv import UpdateWorldModel, UpdateWorldModelResponse
from json import JSONEncoder
from rosbridge_library.internal.message_conversion import extract_values

world = native.Native()
encoder = JSONEncoder()

def update_world_model(request):
    # check if this is an update
    old = world.search_name(request.entity.name)
    if old is not None:
        world.update_entity(old['_id'], extract_values(request.entity))
        return UpdateWorldModelResponse(False)
    else:
        world.insert(extract_values(request.entity))
        return UpdateWorldModelResponse(True)

def main():
    '''
    The main run function for the world_model node.
    '''
    rospy.init_node('world_model')
    # advertise the service
    service = rospy.Service('/update_world_model', UpdateWorldModel, update_world_model)
    rospy.loginfo('World Model Node is Ready')
    rospy.spin()


if __name__ == '__main__':
    main()
