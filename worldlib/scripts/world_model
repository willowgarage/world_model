#!/usr/bin/env python

'''
The world_model node exposes the worldlib API over ROS topics and services.

@author:  Russell Toris
@version: January 23, 2013
'''

import rospy
from worldlib import world_object_instance_database
from world_msgs.srv import *
from world_msgs.msg import WorldObjectInstance
from rosbridge_library.internal.message_conversion import extract_values, populate_instance

# the connection to the database
woid = world_object_instance_database.WorldObjectInstanceDatabase()

def create_world_object_instance(request):
    '''
    The create_world_object_instance service call will create a new instance in the world object 
    instance database. A unique instance_id will be assigned and the creation time will be created.
    
    @param request: the service request
    @type  request: CreateWorldObjectInstance
    @return: the service response
    @rtype:  CreateWorldObjectInstanceResponse
    '''
    # update the times
    t = rospy.get_rostime()
    request.instance.creation = t
    request.instance.update = t
    # convert to JSON and insert
    instance_id = woid.insert(extract_values(request.instance))
    return CreateWorldObjectInstanceResponse(instance_id)

def main():
    '''
    The main run function for the world_model node.
    '''
    rospy.init_node('world_model')
    # advertise the services
    rospy.Service('~create_world_object_instance', CreateWorldObjectInstance, create_world_object_instance)
    rospy.loginfo('World Model Node is Ready')
    rospy.spin()

if __name__ == '__main__':
    main()
